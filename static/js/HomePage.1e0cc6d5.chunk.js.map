{"version":3,"sources":["components/moviesItem/MoviesItem.js","components/moviesItem/MoviesItem.module.css","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","pages/maine/Home.js","services/movies-api.js"],"names":["useStyles","makeStyles","root","display","maxWidth","marginBottom","marginTop","MoviesItem","movies","match","location","classes","length","className","css","cardsArea","map","movie","key","id","elevation","to","pathname","state","from","url","query","search","component","image","poster_path","alt","title","variant","color","module","exports","Card","React","props","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","withStyles","overflow","name","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","_props$component","Component","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardContent","padding","paddingBottom","Home","trendingMovies","moviesAPI","getTrendingMovies","then","setState","this","align","axios","defaults","baseURL","get","process","data","results","console","log","getMoviesBySearch","getMovieDetails","details","getActorsFromMovie","actors","cast","getReviewsOfMovie","reviews"],"mappings":"gIAAA,qIAUMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,eACTC,SAAU,IACVC,aAAc,GACdC,UAAW,MAIA,SAASC,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5CC,EAAUX,IAEhB,OACE,6BACqB,IAAlBQ,EAAOI,QACN,wBAAIC,UAAWC,IAAIC,WAChBP,EAAOQ,KAAI,SAAAC,GAAK,OACf,wBAAIC,IAAKD,EAAME,GAAIN,UAAWF,EAAQT,MACpC,kBAAC,IAAD,CAAMkB,UAAW,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACED,GAAIF,EAAME,GACVE,GAAI,CACFC,SAAS,UAAD,OAAYL,EAAME,IAC1BI,MAAO,CACLC,KAAMf,EAAMgB,IACZC,MAAOhB,EAASiB,UAIpB,6BACE,kBAAC,IAAD,CACEC,UAAU,MACVC,MAAK,yCAAoCZ,EAAMa,aAC/CC,IAAG,wBAAmBd,EAAMe,UAGhC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAAQ,QACRC,MAAM,cACNN,UAAU,KAETX,EAAMe,mB,oBCpD/BG,EAAOC,QAAU,CAAC,UAAY,gC,iCCD9B,wDAaIC,EAAOC,cAAiB,SAAcC,EAAOC,GAC/C,IAAI7B,EAAU4B,EAAM5B,QAChBE,EAAY0B,EAAM1B,UAClB4B,EAAgBF,EAAMG,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBL,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBO,IAAOC,YAAS,CACtDjC,UAAWkC,YAAKpC,EAAQT,KAAMW,GAC9BO,UAAWsB,EAAS,EAAI,EACxBF,IAAKA,GACJG,OA6BUK,gBA9CK,CAElB9C,KAAM,CACJ+C,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZX,I,iCCvDH,yDA2CIc,EAAiBb,cAAiB,SAAwBC,EAAOC,GACnE,IAAIY,EAAWb,EAAMa,SACjBzC,EAAU4B,EAAM5B,QAChBE,EAAY0B,EAAM1B,UAClBwC,EAAwBd,EAAMc,sBAC9BV,EAAQC,YAAyBL,EAAO,CAAC,WAAY,UAAW,YAAa,0BAEjF,OAAoBD,gBAAoBgB,IAAYR,YAAS,CAC3DjC,UAAWkC,YAAKpC,EAAQT,KAAMW,GAC9BwC,sBAAuBN,YAAKM,EAAuB1C,EAAQ4C,cAC3Df,IAAKA,GACJG,GAAQS,EAAuBd,gBAAoB,OAAQ,CAC5DzB,UAAWF,EAAQ6C,qBAyBRR,iBAzEK,SAAgBS,GAClC,MAAO,CAELvD,KAAM,CACJC,QAAS,QACTuD,UAAW,UACXC,MAAO,OACP,0BAA2B,CACzBC,QAASH,EAAMI,QAAQC,OAAOC,cAEhC,iCAAkC,CAChCH,QAAS,MAKbL,aAAc,GAGdC,eAAgB,CACdP,SAAU,SACVe,cAAe,OACfC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,aAAc,UACdV,QAAS,EACTW,gBAAiB,eACjBC,WAAYf,EAAMgB,YAAYC,OAAO,UAAW,CAC9CC,SAAUlB,EAAMgB,YAAYE,SAASC,YA0CX,CAChC1B,KAAM,qBADOF,CAEZG,I,iCClFH,gDA2BI0B,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAYxC,cAAiB,SAAmBC,EAAOC,GACzD,IAAIY,EAAWb,EAAMa,SACjBzC,EAAU4B,EAAM5B,QAChBE,EAAY0B,EAAM1B,UAClBkE,EAAmBxC,EAAMX,UACzBoD,OAAiC,IAArBD,EAA8B,MAAQA,EAClDlD,EAAQU,EAAMV,MACdoD,EAAM1C,EAAM0C,IACZC,EAAQ3C,EAAM2C,MACdvC,EAAQC,YAAyBL,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,MAAO,UAE1G4C,GAA4D,IAAzCN,EAAiBO,QAAQJ,GAC5CK,GAAiBF,GAAoBtD,EAAQiB,YAAS,CACxDwC,gBAAiB,QAASC,OAAO1D,EAAO,OACvCqD,GAASA,EACZ,OAAoB5C,gBAAoB0C,EAAWlC,YAAS,CAC1DjC,UAAWkC,YAAKpC,EAAQT,KAAMW,EAAWsE,GAAoBxE,EAAQ6E,OAA6C,IAAtC,cAAcJ,QAAQJ,IAAqBrE,EAAQ8E,KAC/HjD,IAAKA,EACL0C,MAAOG,EACPJ,IAAKE,EAAmBtD,GAASoD,OAAMS,GACtC/C,GAAQS,MAkDEJ,gBA3FK,CAElB9C,KAAM,CACJC,QAAS,QACTwF,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAItBL,MAAO,CACL7B,MAAO,QAIT8B,IAAK,CAEHK,UAAW,UA0EmB,CAChC5C,KAAM,gBADOF,CAEZ8B,I,iCCpGH,gDAeIiB,EAAczD,cAAiB,SAAqBC,EAAOC,GAC7D,IAAI7B,EAAU4B,EAAM5B,QAChBE,EAAY0B,EAAM1B,UAClBkE,EAAmBxC,EAAMX,UACzBoD,OAAiC,IAArBD,EAA8B,MAAQA,EAClDpC,EAAQC,YAAyBL,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoB0C,EAAWlC,YAAS,CAC1DjC,UAAWkC,YAAKpC,EAAQT,KAAMW,GAC9B2B,IAAKA,GACJG,OAyBUK,gBA5CK,CAElB9C,KAAM,CACJ8F,QAAS,GACT,eAAgB,CACdC,cAAe,MAuCa,CAChC/C,KAAM,kBADOF,CAEZ+C,I,8HC9CGG,E,4MACJ3E,MAAQ,CACN4E,eAAgB,I,kEAGG,IAAD,OAClBC,IAAUC,oBAAoBC,MAAK,SAAAH,GACjC,EAAKI,SAAS,CAAEJ,wB,+BAIV,IACAA,EAAmBK,KAAKjF,MAAxB4E,eACR,OACE,6BACE,kBAAC,IAAD,CACEM,MAAM,SACNvE,MAAM,gBACND,QAAQ,KACRL,UAAU,MAJZ,6BASCuE,EACC,kBAAC,IAAD,iBAAgBK,KAAKjE,MAArB,CAA4B/B,OAAQ2F,KAEpC,kBAAC,IAAD,W,GA3BSnB,aAkCJkB,a,iFCtCfQ,IAAMC,SAASC,QAAU,6BAEV,KACPP,kBADO,WACc,OAAD,mIAEDK,IAClBG,IADkB,wCACmBC,qCACrCR,MAAK,SAAA9F,GAAM,OAAIA,EAAOuG,KAAKC,WAJR,cAEhBxG,EAFgB,yBAKfA,GALe,gCAOtByG,QAAQC,IAAR,MAPsB,4DAWpBC,kBAZO,SAYWzF,GAAQ,OAAD,mIAEPgF,IAAMG,IAAN,kCACSC,mCADT,kBAC4CpF,EAD5C,gCAFO,cAErBT,EAFqB,yBAKpBA,GALoB,gCAO3BgG,QAAQC,IAAR,MAP2B,4DAWzBE,gBAvBO,SAuBSjG,GAAK,OAAD,mIAEAuF,IAAMG,IAAN,mBACR1F,EADQ,oBACM2F,qCAHN,cAEhBO,EAFgB,yBAKfA,GALe,gCAOtBJ,QAAQC,IAAR,MAPsB,4DAUpBI,mBAjCO,WAiCsB,IAAD,sIAATnG,EAAS,+BAAJ,GAAI,kBAETuF,IAClBG,IADkB,mBACF1F,EADE,4BACoB2F,qCACtCR,MAAK,SAAAiB,GAAM,OAAIA,EAAOR,KAAKS,QAJA,cAExBD,EAFwB,yBAKvBA,GALuB,gCAO9BN,QAAQC,IAAR,MAP8B,4DAU5BO,kBA3CO,WA2CqB,IAAD,sIAATtG,EAAS,+BAAJ,GAAI,kBAEPuF,IAAMG,IAAN,mBACR1F,EADQ,4BACc2F,qCAHP,cAEvBY,EAFuB,yBAKtBA,GALsB,gCAO7BT,QAAQC,IAAR,MAP6B","file":"static/js/HomePage.1e0cc6d5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport css from './MoviesItem.module.css';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-table',\n    maxWidth: 300,\n    marginBottom: 10,\n    marginTop: 10,\n  },\n});\n\nexport default function MoviesItem({ movies, match, location }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      {movies.length !== 0 && (\n        <ul className={css.cardsArea}>\n          {movies.map(movie => (\n            <li key={movie.id} className={classes.root}>\n              <Card elevation={3}>\n                <CardActionArea>\n                  <Link\n                    id={movie.id}\n                    to={{\n                      pathname: `movies/${movie.id}`,\n                      state: {\n                        from: match.url,\n                        query: location.search,\n                      },\n                    }}\n                  >\n                    <div>\n                      <CardMedia\n                        component=\"img\"\n                        image={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                        alt={`movie poster: ${movie.title}`}\n                      />\n                    </div>\n                    <CardContent>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                        component=\"p\"\n                      >\n                        {movie.title}\n                      </Typography>\n                    </CardContent>\n                  </Link>\n                </CardActionArea>\n              </Card>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsArea\":\"MoviesItem_cardsArea__1FO4m\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { Component } from 'react';\nimport moviesAPI from '../../services/movies-api';\nimport MoviesItem from '../../components/moviesItem/MoviesItem';\nimport Spinner from '../../components/spinner/Spinner';\nimport { Typography } from '@material-ui/core';\n\nclass Home extends Component {\n  state = {\n    trendingMovies: [],\n  };\n\n  componentDidMount() {\n    moviesAPI.getTrendingMovies().then(trendingMovies => {\n      this.setState({ trendingMovies });\n    });\n  }\n\n  render() {\n    const { trendingMovies } = this.state;\n    return (\n      <div>\n        <Typography\n          align=\"center\"\n          color=\"textSecondary\"\n          variant=\"h3\"\n          component=\"h2\"\n        >\n          Trending movies for today\n        </Typography>\n\n        {trendingMovies ? (\n          <MoviesItem {...this.props} movies={trendingMovies} />\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport default {\n  async getTrendingMovies() {\n    try {\n      const movies = await axios\n        .get(`/3/trending/movie/day?api_key=${process.env.REACT_APP_KEY}`)\n        .then(movies => movies.data.results);\n      return movies;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  async getMoviesBySearch(query) {\n    try {\n      const movie = await axios.get(\n        `/3/search/movie?api_key=${process.env.REACT_APP_KEY}&query=${query}&page=1&include_adult=false`,\n      );\n      return movie;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  async getMovieDetails(id) {\n    try {\n      const details = await axios.get(\n        `/3/movie/${id}?api_key=${process.env.REACT_APP_KEY}`,\n      );\n      return details;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  async getActorsFromMovie(id = 12) {\n    try {\n      const actors = await axios\n        .get(`/3/movie/${id}/credits?api_key=${process.env.REACT_APP_KEY}`)\n        .then(actors => actors.data.cast);\n      return actors;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  async getReviewsOfMovie(id = 12) {\n    try {\n      const reviews = await axios.get(\n        `/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_KEY}`,\n      );\n      return reviews;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n\n// export const getTrendingMovies = () => axios.get(`/3/trending/movie/week?api_key=${process.env.REACT_APP_KEY}`);\n// console.log(getTrendingMovies());\n\n// export const getMoviesBySearch = (searchQuery) =>\n// \taxios.get(`/3/search/movie?api_key=${process.env.REACT_APP_KEY}&query=${searchQuery}&page=1&include_adult=false`);\n// console.log(getMoviesBySearch());\n\n// export const getMovieDetails = (movieId = 12) => axios.get(`/3/movie/${movieId}?api_key=${process.env.REACT_APP_KEY}`);\n// console.log(getMovieDetails());\n\n// export const getActorsFromMovie = (movieId = 12) =>\n// \taxios.get(`/3/movie/${movieId}/credits?api_key=${process.env.REACT_APP_KEY}`);\n// console.log(getActorsFromMovie());\n\n// export const getReviewsOfMovie = (movieId = 12) =>\n// \taxios.get(`/3/movie/${movieId}/reviews?api_key=${process.env.REACT_APP_KEY}`);\n// console.log(getReviewsOfMovie());\n"],"sourceRoot":""}