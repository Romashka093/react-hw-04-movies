{"version":3,"sources":["services/movies-api.js","components/moviesItem/MoviesItem.js","pages/movies/MoviesSearcher.js","pages/movies/Movies.js"],"names":["axios","defaults","baseURL","getTrendingMovies","get","process","then","movies","data","results","console","log","getMoviesBySearch","query","movie","getMovieDetails","id","details","getActorsFromMovie","actors","cast","getReviewsOfMovie","reviews","useStyles","makeStyles","root","display","maxWidth","marginBottom","marginTop","cardsArea","justifyContent","flexWrap","MoviesItem","match","location","classes","length","className","map","key","elevation","to","pathname","state","from","url","search","component","image","poster_path","alt","title","variant","color","theme","alignItems","padding","margin","spacing","width","border","MoviesSearcher","handleSubmit","searchQuery","handleChange","Paper","globalCss","conteiner","noValidate","autoComplete","onSubmit","TextField","label","type","autoFocus","value","onChange","name","Button","size","Movies","serchMovies","moviesAPI","setState","evt","target","preventDefault","props","history","push","searchParam","queryString","parse","this","prevProps","prevParam","Component"],"mappings":"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","file":"static/js/MoviePage.853f687d.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport default {\n  async getTrendingMovies() {\n    try {\n      const movies = await axios\n        .get(`/3/trending/movie/day?api_key=${process.env.REACT_APP_KEY}`)\n        .then(movies => movies.data.results);\n      return movies;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  async getMoviesBySearch(query) {\n    try {\n      const movie = await axios.get(\n        `/3/search/movie?api_key=${process.env.REACT_APP_KEY}&query=${query}&page=1&include_adult=false`,\n      );\n      return movie;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  async getMovieDetails(id) {\n    try {\n      const details = await axios.get(\n        `/3/movie/${id}?api_key=${process.env.REACT_APP_KEY}`,\n      );\n      return details;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  async getActorsFromMovie(id = 12) {\n    try {\n      const actors = await axios\n        .get(`/3/movie/${id}/credits?api_key=${process.env.REACT_APP_KEY}`)\n        .then(actors => actors.data.cast);\n      return actors;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  async getReviewsOfMovie(id = 12) {\n    try {\n      const reviews = await axios.get(\n        `/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_KEY}`,\n      );\n      return reviews;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-table',\n    maxWidth: 300,\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  cardsArea: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n  },\n});\n\nexport default function MoviesItem({ movies, match, location }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      {movies.length !== 0 && (\n        <ul className={classes.cardsArea}>\n          {movies.map(movie => (\n            <li key={movie.id} className={classes.root}>\n              <Card elevation={3}>\n                <CardActionArea>\n                  <Link\n                    id={movie.id}\n                    to={{\n                      pathname: `movies/${movie.id}`,\n                      state: {\n                        from: match.url,\n                        query: location.search,\n                      },\n                    }}\n                  >\n                    <div>\n                      <CardMedia\n                        component=\"img\"\n                        image={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                        alt={`movie poster: ${movie.title}`}\n                      />\n                    </div>\n                    <CardContent>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                        component=\"p\"\n                      >\n                        {movie.title}\n                      </Typography>\n                    </CardContent>\n                  </Link>\n                </CardActionArea>\n              </Card>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport globalCss from '../../index.module.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '35%',\n    },\n    '& .MuiButton-outlinedPrimary': {\n      border: '2px solid #3f51b5',\n    },\n    '& .MuiButton-outlinedSizeLarge': {\n      padding: '13px 21px',\n    },\n  },\n}));\n\nexport default function MoviesSearcher({\n  handleSubmit,\n  searchQuery,\n  handleChange,\n}) {\n  const classes = useStyles();\n  return (\n    <Paper className={globalCss.conteiner} elevation={3}>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"on\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"outlined-search\"\n          label=\"Movie name\"\n          type=\"search\"\n          variant=\"outlined\"\n          autoFocus\n          value={searchQuery}\n          onChange={handleChange}\n          name=\"search\"\n        />\n        <Button type=\"submit\" size=\"large\" variant=\"outlined\" color=\"primary\">\n          Search\n        </Button>\n      </form>\n    </Paper>\n  );\n}\n","import React, { Component } from 'react';\nimport moviesAPI from '../../services/movies-api';\nimport queryString from 'query-string';\nimport MoviesSearcher from './MoviesSearcher';\nimport MoviesItem from '../../components/moviesItem/MoviesItem';\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    searchQuery: '',\n  };\n\n  componentDidMount() {\n    const searchParam = queryString.parse(this.props.location.search);\n\n    if (searchParam.query) {\n      this.serchMovies(searchParam.query);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevParam = queryString.parse(prevProps.location.search);\n    const searchParam = queryString.parse(this.props.location.search);\n    if (prevParam.query !== searchParam.query) {\n      this.serchMovies(searchParam.query);\n    }\n  }\n\n  serchMovies = searchQuery => {\n    moviesAPI.getMoviesBySearch(searchQuery).then(movies =>\n      this.setState({\n        movies: movies.data.results,\n      }),\n    );\n  };\n\n  handleChange = evt => {\n    this.setState({\n      searchQuery: evt.target.value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    if (this.state.searchQuery === '') {\n      return;\n    }\n    this.props.history.push({\n      search: `?query=${this.state.searchQuery}`,\n    });\n    this.serchMovies(this.state.searchQuery);\n  };\n\n  render() {\n    const { movies, searchQuery } = this.state;\n    return (\n      <div>\n        <MoviesSearcher\n          handleSubmit={this.handleSubmit}\n          searchQuery={searchQuery}\n          handleChange={this.handleChange}\n        />\n        {movies && <MoviesItem {...this.props} movies={movies} />}\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"],"sourceRoot":""}